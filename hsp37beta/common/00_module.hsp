// INFO ****************************************************
// FileName : 00_module.hsp
// Version : 0.3.0
// Date    : 2022/11/02
// Author  : YUZRANIUM（ゆずらにうむ）
// Twitter : https://twitter.com/YUZRANIUM
// Git Hub : https://github.com/YUZRANIUM/PC_CareingDiary
//**********************************************************
/* Description
このファイルは以降のスクリプトで使用する自作命令･関数やマクロ、
その他モジュール等を記述しています。
************************************************************/


//タブ項目の文字列の長さに関わらずタブつまみの横幅をすべて同じサイズにします
#const global TCS_FIXEDWIDTH $400
//スタティックテキスト
//winobj "static", "表示するもの", <拡張ウィンドウスタイル>, <ウィンドウスタイル>, Xサイズ, Yサイズ
//<拡張ウィンドウスタイル> : 深い凹み
#const global WS_EX_WINDOWEDGE $200
//<ウィンドウスタイル>
#const global WS_BORDER     $800000    //境界枠線
#const global WS_DISABLED   $8000000   //無効
#const global WS_DLGFRAME   $400000    //膨らみ
#const global SS_CENTER     $1         //中央揃え
#const global SS_RIGHT      $2         //右揃え
#const global SS_SUNKEN     $1000      //浅い凹み
#const global SS_NOTIFY     0x00000100  // STN_CLICKEDメッセージを親ウィンドウに送らせる
#const global STN_CLICKED   $00000000

	/***  メッセージID  ***/

	#const WS_VISIBLE                   0x10000000
	#const WS_CHILD                     0x40000000
	#const global WM_NOTIFY             0x004E

	#const global LVN_COLUMNCLICK       $FFFFFF94

	#const global TCM_ADJUSTRECT        0x1328
	#const global TCM_INSERTITEM        0x1307
	#const global TCM_GETCURSEL         0x130B
	#const global TCM_SETCURSEL         0x130C


	#const global TCN_SELCHANGE         0xFFFFFDD9

/*******************************************************************************/



#module "myvsave"
//vsave短縮
//%1 : ファイル名
#define global mysave(%1)\
	vsave_start\
	: vsave_put setting\
	: vsave_put saveID\
	: vsave_put u\
	: vsave_put st\
	: vsave_put gt\
	: vsave_put gid\
	: vsave_put dsta\
	: vsave_put motimono\
	: vsave_put logmoni\
	: vsave_put bfcpu\
	: vsave_put bfgpu\
	: vsave_put bfrom\
	: vsave_put bfssd\
	: vsave_put bffan\
	: vsave_put bfpow\
	: vsave_end %1
#global

#module "MyPrint"
#define global logpri logmes "\n/*** " + __line__ + " (" + __time__ + ") ***/\n" +
#global


#module "myversion"
#defcfunc local myhspver_ int p1
	sdim a
	hsed_cnvverstr p1  :  a += refstr
	if (instr(a, 0, "b") != -1) {strrep a, "b", "beta"}
	return a
//HSPバージョン"beta文字"付き出力
//%1 : __hspver__ もしくは hspver
//hsedsdk.asをインクルードすること
#define global myhspver(%1) myhspver_@myversion %1
#global


#ifndef __my_rgb_color__
#define global __my_rgb_color__
// RGBを 0〜255 ではなく 0〜1 で指定できる color, objcolor命令
#module "MyRGBColor"
// p1,p2,p3がそれぞれ、R,G,Bの輝度になります。
// 色コードを0から1の間で指定します。0が最も暗く、1が最も明るくなります。
// 標準のcolor命令とobjcolor命令の両方を兼ね備えておりp4パラメータでどちらかに切り替え、または両方使用することができます。
#deffunc Mycolor double p1, double p2, double p3, int p4
	switch p4
		case 0
			color double(p1 * 255), double(p2 * 255), double(p3 * 255)
			swbreak
		case 1
			objcolor double(p1 * 255), double(p2 * 255), double(p3 * 255)
			swbreak
		case 2
			color double(p1 * 255), double(p2 * 255), double(p3 * 255)
			objcolor double(p1 * 255), double(p2 * 255), double(p3 * 255)
			swbreak
		default
			color double(p1 * 255), double(p2 * 255), double(p3 * 255)
			swbreak
	swend
	return
#global // "MyRGBColor"
#endif  // __my_rgb_color__

//#module
//#deffunc rm_init
//    WakuSize = (ginfo(10) - ginfo(12)) / 2
//    TabSize = ginfo(11) - ginfo(13) - WakuSize
//    return

//#defcfunc rmousex
//    x1 = ginfo(0) - ginfo(4) - WakuSize
//    return x1

//#defcfunc rmousey
//    y1 = ginfo(1) - ginfo(5) - TabSize
//    return y1
//#global



/*******************************************************************************
					タブコントロールモジュール
********************************************************************************/
#module "MyTab_1"
#uselib "user32"
#func GetClientRect "GetClientRect" int, int
#func SetWindowLong "SetWindowLongA" int, int, int
#func SetParent "SetParent" int, int
#uselib "gdi32"
#cfunc GetStockObject "GetStockObject" int


//CreateTab p1, p2, p3, p4
//タブコントロールを設置します。statにタブコントロールのハンドルが返ります。
//p1,p2 : タブコントロールのX/Y方向のサイズ
//p3 : タブコントロールのハンドルを受け取る変数
//p4 : タブコントロールの追加ウィンドウスタイル
#deffunc CreateTab int p1, int p2, var p3, int p4
	winobj "systabcontrol32", "", , $52000000 | p4, p1, p2
	p3 = objinfo(stat, 2)
	sendmsg p3, $30, GetStockObject(17)
	dim rect, 4
	return p3
/*******************************************************************************/
//My_CreateTab p1, p2, p3, p4
//タブコントロールを設置します。
//p1,p2 : タブコントロールのX/Y方向のサイズ
//p3 : タブコントロールのハンドルを受け取る変数
//p4 : タブコントロールの追加ウィンドウスタイル(=$400)
#define global My_CreateTab(%1, %2, %3, %4 = $400) CreateTab %1,%2,%3,%4
/*******************************************************************************/
//InsertTab p1,p2,index,p3
//タブコントロールに項目を追加します。
//p1 : "タブつまみ部分の文字列"
//p2 : タブの項目として貼り付けるbgscr命令のウィンドウID値
//index : タブの序列(= 0〜)
//p3 : タブコントロールのオブジェクトハンドル
#deffunc InsertTab str p1, int p2, int index, var p3
	pszText = p1 : tcitem = 1, 0, 0, varptr(pszText)
	sendmsg p3, TCM_INSERTITEM, index, varptr(tcitem)
	GetClientRect p3, varptr(rect)
	sendmsg p3, TCM_ADJUSTRECT, , varptr(rect)
	bgscr p2, rect(2) - rect(0) + 2, rect(3) - rect(1) + 8, 2, rect(0) + 2, rect(1) + 8
	SetWindowLong hwnd, -16, WS_CHILD
	SetParent hwnd, p3
	return
#global
#module "MyTab_2"
//ChangeTab p1,
//タブ切り替え処理用
//p1 : タブの項目として貼り付けるbgscr命令の初回ウィンドウID値
//p2 : タブコントロールのオブジェクトハンドル
#deffunc ChangeTab int p1, var p2
	gsel wID + p1, -1
	sendmsg p2, TCM_GETCURSEL
	wID = stat
	gsel wID + p1, 1
	return
#global
/*******************************************************************************/
#module "MyTab_3"
//My_ChangeTab %1,%2,%3
//タブ切り替え処理用
//%1 : タブの項目として貼り付けるbgscr命令の初回ウィンドウID値
//%2 : タブコントロールのオブジェクトハンドル
//%3 : タブが設置されているウィンドウID
#define global My_ChangeTab(%1,%2,%3)\
		gsel wID + %1, -1\
		: sendmsg %2, TCM_GETCURSEL\
		: wID = stat\
		: gsel wID + %1, 1\
		: gsel %3
#global


/*******************************************************************************
				マウスクリックに反応するスタティックテキスト
					(完成度ビミョー)
********************************************************************************/
	#include "user32.as"

#module "mylmbc"
#deffunc local mylmb_ str p1, int p2, int p3, var p4, int p5
	dim RECT, 4
	winobj "static", p1, , $50000000 | SS_NOTIFY | p5, p2, p3
	p4 = objinfo(stat, 2)
	//スタティックテキスト上のカーソルをハンドカーソルに変更
	LoadCursor 0, 32649
	SetClassLong p4, -12, stat
	return


//マウスクリックに反応するオブジェクト
//p1    : 表示する文字列
//p2,p3 : マウスが反応するXサイズ,Yサイズ
//p4    : オブジェクトハンドルを受け取る変数
//p5    : ウィンドウスタイル($1:中央揃え, $2:右揃え)
#define global mylmb(%1, %2, %3, %4, %5 = $0) mylmb_@mylmbc %1,%2,%3,%4,%5
#global


/*******************************************************************************/

/*******************************************************************************/


#module "MySLbox" w, h, x, y, mgx, mgy, col, boxid

	dim boxid, 6                        // 設置数
	boxid = 0, 0, 0, 0, 0, 0

// コンストラクタ
#modinit int x_, int y_, int w_, int h_, int mgx_, int mgy_, array col_
	x = x_                              // カレントポジションx
	y = y_                              // カレントポジションy
	w = x_ + w_                         // 幅
	h = y_ + h_                         // 高さ
	mgx = mgx_                          // マージンx
	mgy = mgy_                          // マージンy
	ddim col, 3, 2                      // 色設定

	i = 0, 0, 0
	repeat 2
		i(0) = 0
		repeat 3
			col(i(0), i(1)) = col_(i(2))
			i(0)++  :  i(2)++
		loop
		i(1)++
	loop

	boxid(0)++
	boxid(boxid(0)) = boxid(0)
	strmoni = " Save Data Slot" + boxid(boxid(0))
	return



// オブジェクトの設置
#modfunc SetDataSlot var p1

	Mycolor col(0, 0), col(1, 0), col(2, 0), 0  // backcolor
	boxf x - mgx, y - mgy, w + mgx, h + mgy     // backbox

	pos x, y
	Mycolor col(0, 1), col(1, 1), col(2, 1), 0  // frontcolor
	mylmb strmoni, w - x, h - y, p1, WS_BORDER  // frontbox
	return


#global

/********************************************************************************/

	dim h, 4
	h = 0
	dim hoge, 4
	hoge = 0, 0, 0, 0

	ddim colorset1, 6
	colorset1(0) = 0.1, 0.1, 0.75
	colorset1(3) = 0.9, 0.9, 0.9
/***********************************************************/

	screen 0, 700, 450, 2
	mainhwnd = hwnd

	font "メイリオ", 16  :  mref BMSCR, 67  :  hFont = BMSCR(38)  :  objmode 2, 0


	newmod test1, MySLbox, 30, 80, 200, 75, 5, 5, colorset1
	SetDataSlot test1, h(0)


	/*****  割り込み  *****/
	oncmd gosub *mousclick, $111 //マウスクリック
/***********************************************************/

	bgscr 1, 700, 450, 2
	SetWindowLong hwnd, -16, WS_CHILD
	SetParent hwnd, mainhwnd
	font "メイリオ", 16  :  objmode 2, 0  :  objsize 60, 40


	pos (ginfo_sx / 2) - 75, 20
	winobj "static", strmoni@MySLbox, , $50000000 | $800000 | SS_CENTER, 150, 25
	hoge(3) = objinfo(stat, 2)

	pos (ginfo_sx / 2) + 60, 50
	button gosub " LOAD ", *slbut
	hoge(0) = objinfo(stat, 2)

	pos (ginfo_sx / 2) - 120, 50
	button gosub " SAVE ", *slbut
	hoge(1) = objinfo(stat, 2)

	pos (ginfo_sx / 2) - 40, 150
	button gosub " Cancel ", *slbut
	hoge(2) = objinfo(stat, 2)





/***********************************************************/


	sendmsg h(0), $30, hFont
	sendmsg hoge(3), $30, hFont
/*-------------------------------------*/

	gsel 0, 1
	stop


//##########################################################


//mylmbによる割り込み
*mousclick
	//mylmbのオブジェクトハンドル
	hL = lparam
	switch hL
		case h(0)
			gsel 1, 1
			swbreak
	swend
	return

*slbut
	gsel 1, 0
	hl = objinfo(stat, 2)
	switch hl
		case hoge(0)
			dialog "LOAD!!", 0, "Save or Load"
			gsel 1, -1
			swbreak
		case hoge(1)
			dialog "SAVE!!", 0, "Save or Load"
			gsel 1, -1
			swbreak
		case hoge(2)
			dialog "Cancel!!", 0, "Save or Load"
			gsel 1, -1
			swbreak
	swend
	return