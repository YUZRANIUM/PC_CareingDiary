/***メインループ***/
*main
	wait 16
	gsel ID_WIN_SETI : objprm id_savebut, savebut_text(setting(0, 0))
	//ループ制御ボタンの表示切り替え
	if setting(5, 0) == -1 {
		gsel ID_WIN_MAIN : objprm id_opebut, opebut_text(0)
		goto *main
	}
	else {
		gsel ID_WIN_MAIN : objprm id_opebut, opebut_text(1)
	}
	/***描画更新***/
	objprm layid0, 2

	gt(6, 0) = str(int(gt(6, 0)) + 1) //ゲーム内時間カウンタ
	if int(gt(6, 0)) > 500 : gt(6, 0) = "1"

	//カウンター変速機
	gtcontrol = int(gt(6, 0)) \ setting(4, 0)

	if gtcontrol == 0 {
		gt(5, 0) = strf("%02d", int(gt(5, 0)) + 1)
		st(2, 0) = str(double(st(2, 0)) + 0.07)
		st(3, 0) = str(double(st(3, 0)) + 0.1)
		st(6, 0) = str(double(st(6, 0)) - 0.01)
	}

	/***単位変換チェック***/
	if int(st(2, 0)) > 1023 : objprm layid0, 0
	if int(st(3, 0)) > 1023 : objprm layid0, 1

	//オートセーブ設定が有効かどうか
	if setting(0, 0) == 1 {
		savecontrol = int(gt(6, 0)) \ 5
		if savecontrol == 0 : savec = 1 + savec
		if savec > 100 {
			//ファイルの確認
			vsave_start
			vsave_put u
			vsave_put st
			vsave_put gt
			vsave_put setting
			vsave_put motimono
			vsave_put logmoni
			vsave_put bfcpu
			vsave_put bfgpu
			vsave_put bfrom
			vsave_end fname(saveID)
			gsel ID_WIN_MAIN
			objprm layid0, "asc"
			savec = 0
		}
	}
	goto *main

//メニューバー
//*OnCommand
//	cmd = wparam & 0xFFFF
//	switch cmd
//		//ファイル(F) >> 開く
//		case CMD_OPEN
//			setting(5, 0) = -1
//			gsel ID_WIN_SAVE
//			//メインウィンドウ更新
//			gsel ID_WIN_MAIN, 0 : redraw 0 : redraw 1
//			gsel ID_TAB_MOTI, 0 : objprm id_motimono, motimono
//			gsel ID_WIN_SETI, 0
//			objprm id_savebut, setting(0, 0)
//			objprm id_chkosoi, setting(1, 0)
//			objprm id_chkfutu, setting(2, 0)
//			objprm id_chkhaya, setting(3, 0)
//			gsel ID_WIN_MAIN, 0 : objprm layid0, "load"
//			gsel ID_TAB_LOG, 0 : objprm id_logmoni, logmoni
//			gsel ID_WIN_MAIN
//			swbreak

//		//ファイル(F) >> 保存
//		case CMD_SAVE
//			setting(5, 0) = -1
//			mysave u, st, gt, setting, motimono, logmoni, fname(0)
//			gsel ID_WIN_MAIN, 0 : objprm layid0, "Save"
//			gsel ID_TAB_LOG, 0 : objprm id_logmoni, logmoni
//			gsel ID_WIN_MAIN
//			swbreak
//	swend
//	return

//スタート/ストップ
*ope
	setting(5, 0) = setting(5, 0) * -1
	gsel ID_TAB_MOTI, 0 : objprm id_motimono, motimono
	gsel ID_TAB_LOG, 0 : objprm id_logmoni, logmoni
	gsel ID_WIN_MAIN
	return

//ここの処理はamazと統合できるのでは?
//mainタブコントロールの処理
*noti_main
	dupptr nmhdr, lparam, 12, 4
	if (nmhdr(2) == -551) {
		My_ChangeTab ID_TAB_MOTI, hTab_main, ID_WIN_MAIN
	}
	return

//ここの処理はmainと統合できるのでは?
//amazタブコントロールの処理
*noti_amaz
	dupptr nmhdr, lparam, 12, 4
	if (nmhdr(2) == -551) {
		My_ChangeTab ID_OMTAB_CPU, hTabOMI, ID_WIN_AMAZ
	}
	return

//amazoonリストビュー昇降順の処理
*notify
	setting(5, 0) = -1
	dupptr nmhdr, lparam, 12, 4 : tabhwnd = nmhdr(0)
	if (nmhdr(2) == LVN_COLUMNCLICK) {
		dupptr nmlv, lparam, 40, 4 : index = nmlv(4)

		sql_open db
		sql_q "BEGIN;"
		switch tabhwnd
			/***CPU***/
			case hLVCPU
				sdim cpu, 2048
				swc = swc * -1
				if swc == -1 : sqsc = " DESC;" : else : sqsc = " ASC;"
				sql_q "SELECT * FROM MyCPU ORDER BY " + col_list(index) + sqsc
				myindata rec_cnum, col_num, col_list, cpu
				gsel ID_OMTAB_CPU : mydelitem id_LVCPU
				myinitem id_LVCPU, cpu, rec_cnum, col_num
				swbreak

			/***GPU***/
			case hLVGPU
				sdim gpu, 2048
				swg = swg * -1
				if swg == -1 : sqsc = " DESC;" : else : sqsc = " ASC;"
				sql_q "SELECT * FROM MyGPU ORDER BY " + col_list(index) + sqsc
				myindata rec_gnum, col_num, col_list, gpu
				gsel ID_OMTAB_GPU : mydelitem id_LVGPU
				myinitem id_LVGPU, gpu, rec_gnum, col_num
				swbreak

			/***ROM***/
			case hLVROM
				sdim rom, 2048
				swr = swr * -1
				if swr == -1 : sqsc = " DESC;" : else : sqsc = " ASC;"
				sql_q "SELECT * FROM MyROM ORDER BY " + col_list(index) + sqsc
				myindata rec_rnum, col_num, col_list, rom
				gsel ID_OMTAB_ROM : mydelitem id_LVROM
				myinitem id_LVROM, rom, rec_rnum, col_num
				swbreak
		swend
		sql_q "COMMIT;"
		sql_close
	}
	return

//mylmbによる割り込み
*mousclick
	//ハイパーリンクのオブジェクトハンドル
	hL = lparam
	switch hL
		case hLinktw //情報twハイパーリンク
			exec infa(4), 16
			swbreak
		case hLinkgi //情報githubハイパーリンク
			exec infa(5), 16
			swbreak
		/*** Save & Load ***/
		case hSave1
			dialog "Save Data 1 にセーブしますか?", 2, "SAVE"
			if stat == 6 {
				saveID = 1
				vsave_start
				vsave_put u
				vsave_put st
				vsave_put gt
				vsave_put setting
				vsave_put motimono
				vsave_put logmoni
				vsave_put bfcpu
				vsave_put bfgpu
				vsave_put bfrom
				vsave_end fname(saveID)
				gsel ID_WIN_MAIN, 1 : objprm layid0, "save"
			}
			swbreak
		case hLoad1
			vload fname(1)
			swbreak
	swend
	return

*cursorche
	if (lparam & $FFFF) != 1 : return
	// オブジェクトの左上XY右下XYの座標位置を取得
	GetWindowRect hlink, varptr(RECT)
	// 取得したオブジェクトの座標位置とカーソルの座標位置を比較
	PtInRect varptr(RECT), ginfo(0), ginfo(1)
	if stat {
		if oncursor : return
		InvalidateRect hlink, 0, 0
		oncursor = 1
		return
	}
	else {
		if oncursor = 0 : return
		InvalidateRect hlink, 0, 0
		oncursor = 0
		return
	}
	return

//################################################OP画面処理

*OP新規
	gsel ID_WIN_OPEN, -1
	gsel ID_WIN_MAIN, 1
	return

*OPload
	setting(5, 0) = -1
	gsel ID_WIN_SAVE, 1
	//メインウィンドウ更新
	gsel ID_WIN_MAIN, 0 : redraw 0 : redraw 1
	gsel ID_TAB_MOTI, 0 : objprm id_motimono, motimono

	gsel ID_WIN_SETI, 0
	sendmsg hButton, $F1, setting(0, 0)
	objprm id_chkosoi, setting(1, 0)
	objprm id_chkfutu, setting(2, 0)
	objprm id_chkhaya, setting(3, 0)

	gsel ID_WIN_OPEN, -1
	gsel ID_TAB_LOG, 0 : objprm id_logmoni, logmoni
	gsel ID_WIN_MAIN, 1 : objprm layid0, "load"
	return

//======================================

//main>>>amazoon
*amazoon
	setting(5, 0) = -1
	gsel ID_WIN_MAIN, -1
	gsel ID_WIN_AMAZ, 1
	return

//main>>>setting
*settei
	setting(5, 0) = -1
	gsel ID_WIN_MAIN, -1
	gsel ID_WIN_SETI, 1
	return

*infomation
	ret = CCall2(pCtrl, 4, 1, 1)
	gsel ID_WIN_INFO, 1
	return

//情報ウィンドウを閉じるボタン
*subw_exi
	gsel ID_WIN_INFO, -1
	return

//main<<<amazoon,save
*remain
	gsel ID_WIN_SAVE, -1
	gsel ID_WIN_AMAZ, -1
	gsel ID_WIN_MAIN, 1
	return

//save,setting>>>open
*retitle
	setting(5, 0) = -1
	dialog "Return to Opening Really?", 2, "Return to Opening"
	if stat == 6 {
		vsave_start
		vsave_put u
		vsave_put st
		vsave_put gt
		vsave_put setting
		vsave_put motimono
		vsave_put logmoni
		vsave_put bfcpu
		vsave_put bfgpu
		vsave_put bfrom
		vsave_end fname(saveID)
		vload "savedata\\Save7.var"
		//メインウィンドウ更新
		gsel ID_TAB_MOTI, 0 : objprm id_motimono, motimono
		gsel ID_TAB_LOG, 0 : objprm id_logmoni, logmoni
		gsel ID_WIN_SETI, -1
		objprm id_savebut, setting(0, 0)
		objprm id_chkosoi, setting(1, 0)
		objprm id_chkfutu, setting(2, 0)
		objprm id_chkhaya, setting(3, 0)
		/*** AMAZリストビューリセット ***/
		gsel ID_WIN_AMAZ, -1
		/*** CPU ***/
		gsel ID_OMTAB_CPU : mydelitem id_LVCPU
		myinitem id_LVCPU, bfcpu, rec_cnum, col_num
		/*** GPU ***/
		gsel ID_OMTAB_GPU : mydelitem id_LVGPU
		myinitem id_LVGPU, bfgpu, rec_gnum, col_num
		/*** ROM ***/
		gsel ID_OMTAB_ROM : mydelitem id_LVROM
		myinitem id_LVROM, bfrom, rec_rnum, col_num
		gsel ID_OMTAB_CPU, 1

		gsel ID_WIN_SAVE, -1
		gsel ID_WIN_INFO, -1
		gsel ID_WIN_MAIN, -1 : objprm layid0, 2
		gsel ID_WIN_OPEN, 1
	}
	return

*saveload
	setting(5, 0) = -1
	gsel ID_WIN_MAIN, -1
	gsel ID_WIN_SAVE, 1
	return

//======================================設定タブ処理

*tekiou
	sendmsg hChkbox1, $F0 : setting(1, 0) = stat
	sendmsg hChkbox2, $F0 : setting(2, 0) = stat
	sendmsg hChkbox3, $F0 : setting(3, 0) = stat

	if setting(1, 0) == 1 {
		setting(4, 0) = 6
		string2 = " GameSpeed [Slowest]"
	}
	if setting(2, 0) == 1 {
		setting(4, 0) = 4
		string2 = " GameSpeed [Normal]"
	}
	if setting(3, 0) == 1 {
		setting(4, 0) = 1
		string2 = " GameSpeed [Fastest]"
	}
	gsel ID_WIN_MAIN : objprm layid0, "auto_chk"
	gsel ID_TAB_LOG, 0 : objprm id_logmoni, logmoni
	gsel ID_WIN_SETI, -1
	gsel ID_WIN_MAIN, 1
	return

//終了の処理
*exit
	setting(5, 0) = -1
	winID = wparam
	switch winID
		//------------------------------Master Window
		case ID_WIN_MASTER
			vsave_start
			vsave_put u
			vsave_put st
			vsave_put gt
			vsave_put setting
			vsave_put motimono
			vsave_put logmoni
			vsave_put bfcpu
			vsave_put bfgpu
			vsave_put bfrom
			vsave_end fname(saveID)
			vsave "" + dir_cur + "\\savedata\\backup.var"
			gsel ID_WIN_INFO
			WebView2_Release pView
			WebView2_Release pCtrl
			WebView2_Release pEnv
			WebView2_Release ret
			oncmd 0
			end
			swbreak
		//------------------------------情報ウィンドウ
		case ID_WIN_INFO
			gsel ID_WIN_INFO, -1
			swbreak
	swend
	return