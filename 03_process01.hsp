// INFO ****************************************************
// FileName : 03_process01.hsp
// Version : 0.2.0
// Date    : 2022/10/24
// Author  : YUZURANIUM（ゆずらにうむ）
// Twitter : https://twitter.com/YUZRANIUM
// Git Hub : https://github.com/YUZURANIUM/PC_CareingDiary
//**********************************************************
/* Description
このファイルはメインループ及び、layerobjを除く
ほぼ全てのサブルーチンジャンプの処理を行っています。
************************************************************/



/**********************  メインループ  **********************/
*main
	wait 16
	gsel ID_WIN_SETI
	/*****  設定ウィンドウのチェックボックスの表示更新  *****/
	objprm id_savebut, savebut_text(setting(0, 0))
	objprm id_chkreamaz, re_amaz(setting(8, 0))
	objprm id_chkresave, re_save(setting(9, 0))
	objprm id_chkresett, re_sett(setting(10, 0))
	/*****  ループ制御ボタンの表示切り替え  *****/
	if setting(5, 0) == -1 {
		gsel ID_WIN_MAIN : objprm id_opebut, opebut_text(0)
		goto *main
	}
	else {
		gsel ID_WIN_MAIN : objprm id_opebut, opebut_text(1)
	}
	/*****  描画更新  *****/
	objprm layid0, 1
//==========================================================

	/*****  ゲーム内時間カウンターエンジン  *****/

	gt(6, 0) = str(int(gt(6, 0)) + 1)
	if int(gt(6, 0)) > 500 : gt(6, 0) = "1"
	//カウンター変速機
	gtcontrol = int(gt(6, 0)) \ setting(4, 0)


	/*****  過給機付き  *****/
	if setting(3, 0) == 1 {
		/*****  エンジン  *****/
		gt(5, 0) = str(int(gt(5, 0)) + 1)
		if int(gt(5, 0)) > 500 : gt(5, 0) = "1"
		/*****  変速機  *****/
		gtcontrol = int(gt(5, 0)) \ setting(4, 0)
	}

	/*****  ステータス変動  *****/
	if gtcontrol == 0 {
		gt(5, 0) = strf("%02d", int(gt(5, 0)) + 1)
		/*****  過給機  *****/
		if setting(3, 0) == 1 {
			gt(4, 0) = strf("%02d", int(gt(4, 0)) + 1)
		}
		st(2, 0) = str(double(st(2, 0)) + 0.5)  //ROM
		st(3, 0) = str(double(st(3, 0)) + 1)    //SSD
		st(6, 0) = str(double(st(6, 0)) - 0.01) //Power
	}

	/*****   単位変換チェック  *****/
	if int(st(2, 0)) > 1023 : objprm layid0, 0
	if int(st(3, 0)) > 1023 : objprm layid0, 0


	//オートセーブ設定が有効かどうか
	if setting(0, 0) == 1 {
		savecontrol = int(gt(6, 0)) \ 5
		if savecontrol == 0 : savec = 1 + savec
		/*****  オートセーブ  *****/
		if savec > 100 {
			mysave2 (fname(saveID))
			gsel ID_WIN_MAIN : objprm layid0, "log,asc"
			savec = 0
		}
	}
	goto *main
/******************  メインループここまで  ******************/



//メインループ制御トグルボタン
*ope
	setting(5, 0) = setting(5, 0) * -1
	gsel ID_TAB_MOTI, 0 : objprm id_motimono, motimono
	gsel ID_TAB_LOG, 0 : objprm id_logmoni, logmoni
	gsel ID_WIN_MAIN
	return


/***************  タブコントロールタブ切り替え  ***************/

//mainタブコントロールの処理
//ここの処理はamazと統合できるのでは?
*noti_main
	dupptr nmhdr, lparam, 12, 4
	if (nmhdr(2) == -551) {
		My_ChangeTab ID_TAB_MOTI, hTab_main, ID_WIN_MAIN
	}
	return

//amazタブコントロールの処理
//ここの処理はmainと統合できるのでは?
*noti_amaz
	dupptr nmhdr, lparam, 12, 4
	if (nmhdr(2) == -551) {
		My_ChangeTab ID_OMTAB_CPU, hTabOMI, ID_WIN_AMAZ
	}
	return


/******************  リストビュー並べ替え  ******************/

//amazoonリストビュー昇降順の処理
*notify
	setting(5, 0) = -1
	//タブコントロールのオブジェクトハンドル取得
	dupptr nmhdr, lparam, 12, 4 : tabhwnd = nmhdr(0)
	if (nmhdr(2) == LVN_COLUMNCLICK) {
		//タブコントロールのクリックされたカラム取得
		dupptr nmlv, lparam, 40, 4 : index = nmlv(4)

		sql_open db
		sql_q "BEGIN;"
		switch tabhwnd
			/*****  CPU  *****/
			case hLVCPU
				sdim cpu, 2048
				swc = swc * -1
				if swc == -1 : sqsc = " DESC;" : else : sqsc = " ASC;"
				sql_q "SELECT * FROM MyCPU ORDER BY " + col_list(index) + sqsc
				myindata rec_cnum, col_num, col_list, cpu
				gsel ID_OMTAB_CPU : mydelitem id_LVCPU
				myinitem id_LVCPU, cpu, rec_cnum, col_num
				swbreak

			/*****  GPU  *****/
			case hLVGPU
				sdim gpu, 2048
				swg = swg * -1
				if swg == -1 : sqsc = " DESC;" : else : sqsc = " ASC;"
				sql_q "SELECT * FROM MyGPU ORDER BY " + col_list(index) + sqsc
				myindata rec_gnum, col_num, col_list, gpu
				gsel ID_OMTAB_GPU : mydelitem id_LVGPU
				myinitem id_LVGPU, gpu, rec_gnum, col_num
				swbreak

			/*****  ROM  *****/
			case hLVROM
				sdim rom, 2048
				swr = swr * -1
				if swr == -1 : sqsc = " DESC;" : else : sqsc = " ASC;"
				sql_q "SELECT * FROM MyROM ORDER BY " + col_list(index) + sqsc
				myindata rec_rnum, col_num, col_list, rom
				gsel ID_OMTAB_ROM : mydelitem id_LVROM
				myinitem id_LVROM, rom, rec_rnum, col_num
				swbreak
		swend
		sql_q "COMMIT;"
		sql_close
	}
	return


/****************  カスタムオブジェクトmylmb  ****************/

//mylmbによる割り込み
*mousclick
	//ハイパーリンクのオブジェクトハンドル
	hL = lparam
	switch hL
		case hLinktw //情報twハイパーリンク
			exec infa(4), 16
			swbreak
		case hLinkgi //情報githubハイパーリンク
			exec infa(5), 16
			swbreak
		/*****   Save & Load   *****/
		case hSave1
			dialog "Save Data 1 にセーブしますか?", 2, "SAVE"
			if stat == 6 {
				saveID = 1
				mysave2 (fname(saveID))
				gsel ID_WIN_MAIN, 1 : objprm layid0, "log,save"
			}
			swbreak
		case hLoad1
			dialog "Save Data 1 をロードしますか?", 2, "LOAD"
			if stat == 6 {
				saveID = 1
				vload fname(saveID)
				gsel ID_WIN_MAIN : objprm layid0, 2
				gsel ID_WIN_MAIN, 1
			}
			swbreak
	swend
	return

*cursorche
	if (lparam & $FFFF) != 1 : return
	// オブジェクトの左上XY右下XYの座標位置を取得
	GetWindowRect hlink, varptr(RECT)
	// 取得したオブジェクトの座標位置とカーソルの座標位置を比較
	PtInRect varptr(RECT), ginfo(0), ginfo(1)
	if stat {
		if oncursor : return
		InvalidateRect hlink, 0, 0
		oncursor = 1
		return
	}
	else {
		if oncursor = 0 : return
		InvalidateRect hlink, 0, 0
		oncursor = 0
		return
	}
	return

/******************  各ウィンドウボタン処理  ******************/

/*** Opening Window ***/

*OP新規
	gsel ID_WIN_OPEN, -1
	gsel ID_WIN_MAIN, 1
	return

*OPload
	gsel ID_WIN_OPEN, -1
	gsel ID_WIN_SAVE, 1
	return



//main >>> amazoon
*amazoon
	setting(5, 0) = -1
	gsel ID_WIN_MAIN, -1
	gsel ID_WIN_AMAZ, 1
	remain_code = "re,amaz"
	return

//main >>> save
*saveload
	setting(5, 0) = -1
	gsel ID_WIN_MAIN, -1
	gsel ID_WIN_SAVE, 1
	remain_code = "re,save"
	return

//main >>> setting
*settei
	setting(5, 0) = -1
	gsel ID_WIN_MAIN, -1
	gsel ID_WIN_SETI, 1
	remain_code = "re,set"
	return

//main <<< amazoon, save, setting
*remain
	gsel ID_WIN_MAIN : objprm layid0, remain_code
	return

*infomation
	ret = CCall2(pCtrl, 4, 1, 1)
	gsel ID_WIN_INFO, 1
	return

//情報ウィンドウを閉じるボタン
*subw_exi
	gsel ID_WIN_INFO, -1
	return


//save,setting>>>open
*retitle
	setting(5, 0) = -1
	dialog "Return to Opening Really?", 2, "Return to Opening"
	if stat == 6 {
		mysave2 (fname(saveID))
		vload "savedata\\Save7.var"
		gsel ID_WIN_MAIN : objprm layid0, 2
		gsel ID_WIN_MAIN, -1
		gsel ID_WIN_OPEN, 1
	}
	return

//======================================設定処理

*tekiou
	//チェックボックスの値取得
	//ゲーム速度
	sendmsg hChkbox1, $F0 : setting(1, 0) = stat
	sendmsg hChkbox2, $F0 : setting(2, 0) = stat
	sendmsg hChkbox3, $F0 : setting(3, 0) = stat
	//remain
	sendmsg hChkbox4, $F0 : setting(8, 0) = stat
	sendmsg hChkbox5, $F0 : setting(9, 0) = stat
	sendmsg hChkbox6, $F0 : setting(10, 0) = stat

	/*****  ゲーム内のログ表示（設定変更）  *****/
	if setting(1, 0) == 1 {
		setting(4, 0) = 6
		string2 = " GameSpeed [Slowest]"
	}
	if setting(2, 0) == 1 {
		setting(4, 0) = 4
		string2 = " GameSpeed [Normal]"
	}
	if setting(3, 0) == 1 {
		setting(4, 0) = 4
		string2 = " GameSpeed [Fastest]"
	}
	//logstr = {"
	//*** Settings Change ***
	//aa
	//bb
	//cc
	//"}
	strrep logstr, "aa", savebut_text(setting(0, 0))
	strrep logstr, "bb", string2
	strrep logstr, "cc", "" + re_amaz(setting(8, 0)) + "\n" + re_save(setting(9, 0)) + "\n" + re_sett(setting(10, 0))
	gsel ID_WIN_MAIN : objprm layid0, "log,auto_chk"
	logmes logstr
	return


//終了の処理
*exit
	setting(5, 0) = -1
	winID = wparam
	switch winID
		//------------------------------Master Window
		case ID_WIN_MASTER
			/*****  自動保存  *****/
			mysave2 (fname(saveID))
			vsave "" + dir_cur + "\\savedata\\backup.var"
			/*****  WebView2の後処理  *****/
			gsel ID_WIN_INFO
			WebView2_Release pView
			WebView2_Release pCtrl
			WebView2_Release pEnv
			WebView2_Release ret
			oncmd 0
			end
			swbreak
		//------------------------------情報ウィンドウ
		case ID_WIN_INFO
			gsel ID_WIN_INFO, -1
			swbreak
	swend
	return