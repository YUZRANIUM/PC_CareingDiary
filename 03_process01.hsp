// INFO ****************************************************
// FileName : 03_process01.hsp
// Version : 0.3.2
// Date    : 2024/02/05
// Author  : YUZRANIUM（ゆずらにうむ）
// Twitter : https://twitter.com/YUZRANIUM
// Git Hub : https://github.com/YUZRANIUM/PC_CareingDiary
//**********************************************************
/* Description
このファイルはメインループ及び、layerobjを除く
ほぼ全てのサブルーチンジャンプの処理を行っています。
************************************************************/



//%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  メインループ  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ここから
*main
//////////////////////////// ゲームSTOP中でも行う処理 /////////////////// ここから
	await (1000 / 60)
	gsel ID_WIN_MASTER  :  title titlemes + "   fps = " + d3getfps()

	stick key
	if key & 128 : goto *exit ; ESCAPE

	gsel ID_WIN_SETI
	/*****  設定ウィンドウのチェックボックスの表示更新  *****/
	objprm id_savebut, savebut_text(setting(0))
	objprm Shkidh(3, 0), re_amaz(setting(8))
	objprm Shkidh(4, 0), re_save(setting(9))
	objprm Shkidh(5, 0), re_sett(setting(10))
	objprm Shkidh(6, 0), re_dock(setting(11))
	objprm Shkidh(7, 0), re_info(setting(12))

	;=======================================================
	; オートセーブの制御
	;
	if setting & ((gettime(5) \ 5) = 0) & (gettime(6) = 0) {seton autoch} else {setoff autoch}
	if (autoch = TGR_ON) {G_prm ID_WIN_MASTER, 0, layidh(0), lay_autosave}

	;=======================================================
	; オフラインタイマーの制御
	;
	if (setting(5) = -1) {setoff ftgl} else {seton ftgl}
	gsel ID_WIN_MAIN, 0
	if      (ftgl = TGR_OFF) {focus_lost ltime : objprm layidh(1), "login,fcs_lost"}
	else:if (ftgl = TGR_ON)  {focus_gain ltime : objprm layidh(1), "login,fcs_gain"}

	;=======================================================
	; メインループの制御
	;
	/*****  ループ制御ボタンの表示切り替え  *****/
	G_prm ID_WIN_MAIN, 0, id_opebut, opebut_text(int(opebut_text.2))
	if (setting(5) = -1) {opebut_text(2) = "あ" : goto *main}
	else                 {opebut_text(2) = "1"}
//////////////////////////// ゲームSTOP中でも行う処理 /////////////////// ここまで





	;=======================================================
	; 描画処理
	;
	gsel ID_WIN_MAIN
	// ゲーム内時間カウンターエンジン
	gt(6)++ : if (gt(6) > 59) {gt(6) = 0}
	// カウンター変速機（ゲーム速度の変更）
	gtcontrol = gt(6) \ setting(4)

	/*****  ステータス変動  *****/
	if gtcontrol = 0 {gt(5)++ : my_daytime_chk gt, gt(5), TskFlg : objprm layidh(2), newst}
	; ステータス更新
	if TskFlg {objprm layidh(1), "Task_Get"}

	redraw 0, 0, 0, 680, 280
	redraw 1, 0, 0, 680, 280

	goto *main
//%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  メインループ  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ここまで





//メインループ制御トグルボタン
*ope
	setting(5) *= -1 : gsel ID_WIN_MAIN
	return


/*****************  タブコントロールタブ切り替え  *****************/

//タブコントロールタブの切り替え
*tabchange
	dupptr nmhdr, lparam, 12, 4 : hTab = nmhdr(0)
	if (nmhdr(2) = TCN_SELCHANGE) {
		if      (hTab = hTab_main) {ChangeTab hTab_main, nWinid(0), ID_TAB_MOTI} //mainタブコントロールの処理
		else:if (hTab = hTabOMI)   {ChangeTab hTabOMI, nWinid(1), ID_OMTAB_CPU}  //amazタブコントロールの処理
	}
	return

/********************  リストビュー並べ替え  ********************/

//amazoonリストビュー昇降順の処理
*lisupdn
	//タブコントロールのオブジェクトハンドル取得
	dupptr nmhdr, lparam, 12, 4 : hTab = nmhdr(0)
	if (nmhdr(2) = LVN_COLUMNCLICK) {
		//タブコントロールのクリックされたカラム取得
		dupptr nmlv, lparam, 40, 4 : index = nmlv(4)

		sql_open db
		sql_q "BEGIN;"
		if      (hTab = LVidh(0, 0)) {col_ch LVidh, cpu, swlv, colum_sqsc, col_list, sqsc, index, 0}
		else:if (hTab = LVidh(1, 0)) {col_ch LVidh, gpu, swlv, colum_sqsc, col_list, sqsc, index, 1}
		else:if (hTab = LVidh(2, 0)) {col_ch LVidh, rom, swlv, colum_sqsc, col_list, sqsc, index, 2}
		else:if (hTab = LVidh(3, 0)) {col_ch LVidh, ssd, swlv, colum_sqsc, col_list, sqsc, index, 3}
		else:if (hTab = LVidh(4, 0)) {col_ch LVidh, fan, swlv, colum_sqsc, col_list, sqsc, index, 4}
		else:if (hTab = LVidh(5, 0)) {col_ch LVidh, pow, swlv, colum_sqsc, col_list, sqsc, index, 5}
		sql_q "COMMIT;"
		sql_close
	}
	return


/*****************  カスタムオブジェクトmylmb  *****************/

//mylmbによる割り込み
*mousclick
	//mylmbのオブジェクトハンドル
	hL = lparam

	if      (hL = hLinktw) {exec infa(4), 16 : return} //情報twハイパーリンク
	else:if (hL = hLinkgi) {exec infa(5), 16 : return} //情報githubハイパーリンク
	if (hL = Btnidh(0, 1)) | (hL = Btnidh(1, 1)) | (hL = Btnidh(2, 1)) : return

	repeat 10
		if      (hL = hls(0, cnt)) {saveID = cnt, lay_load : break} ; load
		else:if (hL = hls(1, cnt)) {saveID = cnt, lay_save : break} ; save
	loop
	saveID(2) = (saveID(1) = lay_save) ; load, saveの真偽値

	dialog strf(dformat(saveID(2)), saveID), 2, dformat(2 + saveID(2))
	if (stat = 6) {G_prm ID_WIN_MASTER, 0, layidh(0), saveID(1)}
	return

/*******************  各ウィンドウボタン処理  *******************/

/*** Opening Window ***/

*OP新規
	gsel ID_WIN_OPEN, -1 : gsel ID_WIN_MAIN, 1
	/*****  ログイン処理  *****/
	login_reset ltime
	game_login ltime
	return

*OPload
	gsel ID_WIN_OPEN, -1 : gsel ID_WIN_SAVE, 1
	return



//main >>> amazoon
*amazoon
	setting(5) = -1
	gsel ID_WIN_MAIN, -1 : gsel ID_WIN_AMAZ, 1
	remainflg = 1
	return

//main >>> save
*saveload
	setting(5) = -1
	gsel ID_WIN_MAIN, -1 : gsel ID_WIN_SAVE, 1
	remainflg = 2
	return

//main >>> setting
*settei
	setting(5) = -1
	gsel ID_WIN_MAIN, -1 : gsel ID_WIN_SETI, 1
	remainflg = 3
	return

; main >>> PC DOCK
*dock
	setting(5) = -1
	gsel ID_WIN_MAIN, -1 : gsel ID_WIN_DOCK, 1
	remainflg = 4
	return

; setting >>> info
*infomation
	setting(5) = -1
	webv2(ret) = CCall2(webv2(pCtrl), 4, 1, 1)
	gsel ID_WIN_SETI, -1 : gsel ID_WIN_INFO, 1
	remainflg = 5
	return


//main <<< amazoon, save, setting, dock, info
*remain
	/*****  Mainウィンドウに戻る際のメインループ自走設定  *****/
	if      (remainflg = 1) {if setting.8  {setting.5 = 1} : gsel ID_WIN_AMAZ, -1}
	else:if (remainflg = 2) {if setting.9  {setting.5 = 1} : gsel ID_WIN_SAVE, -1}
	else:if (remainflg = 3) {if setting.10 {setting.5 = 1} : gsel ID_WIN_SETI, -1}
	else:if (remainflg = 4) {if setting.11 {setting.5 = 1} : gsel ID_WIN_DOCK, -1}
	else:if (remainflg = 5) {if setting.12 {setting.5 = 1} : gsel ID_WIN_INFO, -1}
	gsel ID_WIN_MAIN, 1
	remainflg = 0
	return



//save,setting>>>open
*retitle
	setting(5) = -1
	dialog "Return to Opening Really?", 2, "Return to Opening"
	if stat = 6 {
		/*****  ログアウト処理  *****/
		game_logout ltime

		mysave fname(saveID)
		saveID = 20
		G_prm ID_WIN_MASTER, 0, layidh(0), lay_load
		gsel ID_WIN_MAIN, -1 : gsel ID_WIN_OPEN, 1
	}
	return

//======================================設定処理

*tekiou
	; オートセーブと自走設定のログ出力用文字列型配列
	tmp = 0 : dim tmp, 7
	logstr(10) = logstr(9) ; 前回のログ内容保存

	//チェックボックスの値取得
	//ゲーム速度
	sendmsg Shkidh(0, 1), $F0 : setting(1) = stat
	sendmsg Shkidh(1, 1), $F0 : setting(2) = stat
	sendmsg Shkidh(2, 1), $F0 : setting(3) = stat
	//remain
	sendmsg Shkidh(3, 1), $F0 : setting(8) = stat
	sendmsg Shkidh(4, 1), $F0 : setting(9) = stat
	sendmsg Shkidh(5, 1), $F0 : setting(10) = stat
	sendmsg Shkidh(6, 1), $F0 : setting(11) = stat
	sendmsg Shkidh(7, 1), $F0 : setting(12) = stat

	/*****  ゲーム内のログ表示（設定変更）  *****/
	if      setting(1) {setting(4) = GameSpeed_1 : tmp = 4}
	else:if setting(2) {setting(4) = GameSpeed_2 : tmp = 5}
	else:if setting(3) {setting(4) = GameSpeed_3 : tmp = 6}

	/*****  オートセーブと自走設定のログ出力  *****/
	tmp.1 = (7 + setting), (7 + setting.8), (7 + setting.9), (7 + setting.10), (7 + setting.11), (7 + setting.12)

	logstr.9 = strf(logstr, logstr(tmp.0), logstr(tmp.1), logstr(tmp.2), logstr(tmp.3), logstr(tmp.4), logstr(tmp.5), logstr(tmp.6))
	; 設定変更ログ
	G_prm ID_WIN_MAIN, 0, layidh(1), "log,setch"

	dim tmp, 7
	return


//終了の処理
*exit
	setting(5) = -1
	/*****  ログアウト処理  *****/
	game_logout ltime
	/*****  自動保存  *****/
	mysave fname(saveID)
	mysave AutoSavedir
	vsave backupdir

	/*****  WebView2の後処理  *****/
	gsel ID_WIN_INFO
	WebView2_Release webv2(pView)
	WebView2_Release webv2(pCtrl)
	WebView2_Release webv2(pEnv)
	WebView2_Release webv2(ret)
	oncmd 0
	end
	return