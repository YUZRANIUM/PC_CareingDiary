/***メインループ***/
*main
	wait 16

	gsel ID_WIN_SETI : objprm id_savebut, savebut_text(setting(0, 0))
	//ループ制御ボタンの表示切り替え
	if setting(5, 0) == -1 {
		gsel ID_WIN_MAIN : objprm id_opebut, opebut_text(0)
		goto *main
	}
	else {
		gsel ID_WIN_MAIN : objprm id_opebut, opebut_text(1)
	}
	/***描画更新***/
	//gsel ID_WIN_MAIN
	objprm layid0, 2

	gt(6, 0) = str(int(gt(6, 0)) + 1) //ゲーム内時間カウンタ
	if int(gt(6, 0)) > 5000 : gt(6, 0) = "1"

	//カウンター変速機
	gtcontrol = int(gt(6, 0)) \ setting(4, 0)

	if gtcontrol == 0 {
		gt(5, 0) = strf("%02d", int(gt(5, 0)) + 1)
		st(2, 0) = str(double(st(2, 0)) + 0.07)
		st(3, 0) = str(double(st(3, 0)) + 0.1)
		st(6, 0) = str(double(st(6, 0)) - 0.01)
	}

	/***単位変換チェック***/
	if int(st(2, 0)) > 1023 : objprm layid0, 0
	if int(st(3, 0)) > 1023 : objprm layid0, 1

	//オートセーブ設定が有効かどうか
	if setting(0, 0) == 1 {
		savecontrol = int(gt(6, 0)) \ 10
		if savecontrol == 0 : savec = 1 + savec
		if savec > 1000 {
			//ファイルの確認
			exist fname
			if strsize == -1 {
				fname = savedir + "\\autosave.var"
			}
			mysave u, st, gt, setting, motimono, logmoni, fname
			astip = "asc"
			objprm layid0, astip
			gsel ID_TAB_LOG, 0 : objprm id_logmoni, logmoni
			gsel ID_WIN_MAIN
			savec = 0
		}
	}
	goto *main

//メニューバー
//*OnCommand
//	cmd = wparam & 0xFFFF
//	switch cmd
//		//ファイル(F) >> 開く
//		case CMD_OPEN
//			setting(5, 0) = -1
//			dialog "var", 16, "SaveData"
//			if stat = 0 : return
//			fname = refstr
//			vload fname
//			//メインウィンドウ更新
//			gsel ID_WIN_MAIN, 0 : redraw 0 : redraw 1
//			gsel ID_TAB_MOTI, 0 : objprm id_motimono, motimono
//			gsel ID_WIN_SETI, 0
//			objprm id_savebut, setting(0, 0)
//			objprm id_chkosoi, setting(1, 0)
//			objprm id_chkfutu, setting(2, 0)
//			objprm id_chkhaya, setting(3, 0)
//			gsel ID_WIN_MAIN, 0 : objprm layid0, "load"
//			gsel ID_TAB_LOG, 0 : objprm id_logmoni, logmoni
//			gsel ID_WIN_MAIN
//			swbreak

//		//ファイル(F) >> 保存
//		case CMD_SAVE
//			setting(5, 0) = -1
//			dialog "var", 17, "SaveData"
//			if stat = 0 : return
//			fname = refstr
//			//拡張子
//			exname = getpath(fname, 2)
//			if exname = "" : fname += ".var"
//			mysave u, st, gt, setting, motimono, logmoni, fname
//			gsel ID_WIN_MAIN, 0 : objprm layid0, "Save"
//			gsel ID_TAB_LOG, 0 : objprm id_logmoni, logmoni
//			gsel ID_WIN_MAIN
//			swbreak
//	swend
//	return

//スタート/ストップ
*ope
	setting(5, 0) = setting(5, 0) * -1
	gsel ID_TAB_MOTI, 0 : objprm id_motimono, motimono
	gsel ID_TAB_LOG, 0 : objprm id_logmoni, logmoni
	gsel ID_WIN_MAIN
	return

//mainタブコントロールの処理
*noti_main
	dupptr nmhdr, lparam, 12, 4
	if (nmhdr(2) == -551) {
		My_ChangeTab ID_TAB_MOTI, hTab_main, ID_WIN_MAIN
	}
	return

//amazタブコントロールの処理
*noti_amaz
	dupptr nmhdr, lparam, 12, 4
	if (nmhdr(2) == -551) {
		My_ChangeTab ID_OMTAB_CPU, hTabOMI, ID_WIN_AMAZ
	}
	return

//amazoonリストビュー昇降順の処理
*notify
	setting(5, 0) = -1
	dupptr nmhdr, lparam, 12, 4 : tabhwnd = nmhdr(0)
	if (nmhdr(2) == LVN_COLUMNCLICK) {
		dupptr nmlv, lparam, 40, 4 : index = nmlv(4)

		sql_open db
		sql_q "BEGIN;"
		switch tabhwnd
			/***CPU***/
			case hLVCPU
				sdim cpu, 2048
				swc = swc * -1
				if swc == -1 : sqsc = " DESC;" : else : sqsc = " ASC;"
				sql_q "SELECT * FROM MyCPU ORDER BY " + col_clis(index) + sqsc
				col_clis = sql_collist() : split col_clis, ",", col_clis
				myindata rec_cnum, col_cnum, col_clis, cpu
				gsel ID_OMTAB_CPU
				mydelitem id_LVCPU
				myinitem id_LVCPU, cpu, rec_cnum, col_cnum
				swbreak

			/***GPU***/
			case hLVGPU
				sdim gpu, 2048
				swg = swg * -1
				if swg == -1 : sqsc = " DESC;" : else : sqsc = " ASC;"
				sql_q "SELECT * FROM MyGPU ORDER BY " + col_glis(index) + sqsc
				col_glis = sql_collist() : split col_glis, ",", col_glis
				myindata rec_gnum, col_gnum, col_glis, gpu
				gsel ID_OMTAB_GPU
				mydelitem id_LVGPU
				myinitem id_LVGPU, gpu, rec_gnum, col_gnum
				swbreak

			/***ROM***/
			case hLVROM
				sdim rom, 2048
				swr = swr * -1
				if swr == -1 : sqsc = " DESC;" : else : sqsc = " ASC;"
				sql_q "SELECT * FROM MyROM ORDER BY " + col_rlis(index) + sqsc
				col_rlis = sql_collist() : split col_rlis, ",", col_rlis
				myindata rec_rnum, col_rnum, col_rlis, rom
				gsel ID_OMTAB_ROM
				mydelitem id_LVROM
				myinitem id_LVROM, rom, rec_rnum, col_rnum
				swbreak
		swend
		sql_q "COMMIT;"
		sql_close
	}
	return

//################################################OP画面処理

*OP新規
	gsel ID_WIN_OPEN, -1
	gsel ID_WIN_MAIN, 1
	return

*OPload
	setting(5, 0) = -1
	dialog "var", 16, "SaveData"
	if stat = 0 : return
	fname = refstr
	vload fname
	//メインウィンドウ更新
	gsel ID_WIN_MAIN, 0 : redraw 0 : redraw 1
	gsel ID_TAB_MOTI, 0 : objprm id_motimono, motimono

	gsel ID_WIN_SETI, 0
	sendmsg hButton, $F1, setting(0, 0)
	objprm id_chkosoi, setting(1, 0)
	objprm id_chkfutu, setting(2, 0)
	objprm id_chkhaya, setting(3, 0)

	gsel ID_WIN_OPEN, -1
	gsel ID_TAB_LOG, 0 : objprm id_logmoni, logmoni
	gsel ID_WIN_MAIN, 1 : objprm layid0, "load"
	return

//======================================

*amazoon
	setting(5, 0) = -1
	gsel ID_WIN_MAIN, -1
	gsel ID_WIN_AMAZ, 1
	return

*settei
	setting(5, 0) = -1
	gsel ID_WIN_MAIN, -1
	gsel ID_WIN_SETI, 1
	return

*infomation
	gsel ID_WIN_INFO, 1
	return

//情報ウィンドウを閉じるボタン
*subw_exi
	gsel ID_WIN_INFO, -1
	return

*remain
	gsel ID_WIN_SAVE, -1
	gsel ID_WIN_AMAZ, -1
	gsel ID_WIN_MAIN, 1
	return

*retitle
	exist fname
	if strsize == -1 {
		fname = savedir + "\\autosave.var"
	}
	mysave u, st, gt, setting, motimono, logmoni, fname
	gsel ID_WIN_SAVE, -1
	gsel ID_WIN_SETI, -1
	gsel ID_WIN_INFO, -1
	gsel ID_WIN_OPEN, 1
	return

*saveload
	gsel ID_WIN_MAIN, -1
	gsel ID_WIN_SAVE, 1
	return

//======================================設定タブ処理

*tekiou
	sendmsg hChkbox1, $F0 : setting(1, 0) = stat
	sendmsg hChkbox2, $F0 : setting(2, 0) = stat
	sendmsg hChkbox3, $F0 : setting(3, 0) = stat

	if setting(1, 0) == 1 {
		setting(4, 0) = 30
		string2 = " GameSpeed [Slowest]"
	}
	if setting(2, 0) == 1 {
		setting(4, 0) = 6
		string2 = " GameSpeed [Normal]"
	}
	if setting(3, 0) == 1 {
		setting(4, 0) = 3
		string2 = " GameSpeed [Fastest]"
	}
	gsel ID_WIN_MAIN : objprm layid0, "auto_chk"
	gsel ID_TAB_LOG, 0 : objprm id_logmoni, logmoni
	gsel ID_WIN_SETI, -1
	gsel ID_WIN_MAIN, 1
	return

//終了の処理
*exit
	setting(5, 0) = -1
	winID = wparam
	switch winID
		//------------------------------Master Window
		case ID_WIN_MASTER
			exist fname
			if strsize == -1 {
				fname = savedir + "\\autosave.var"
			}
			mysave u, st, gt, setting, motimono, logmoni, fname
			oncmd 0
			end
			swbreak
		//------------------------------情報ウィンドウ
		case ID_WIN_INFO
			gsel ID_WIN_INFO, -1
			swbreak
	swend
	return