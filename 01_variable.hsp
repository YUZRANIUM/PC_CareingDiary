// INFO ****************************************************
// FileName : 01_variable.hsp
// Version : 0.3.0
// Date    : 2022/11/02
// Author  : YUZRANIUM（ゆずらにうむ）
// Twitter : https://twitter.com/YUZRANIUM
// Git Hub : https://github.com/YUZRANIUM/PC_CareingDiary
//**********************************************************
/* Description
このファイルは以降のスクリプトで使用する変数の定義、初期化などを行っています。
SQL関係もデータを変数に格納するということでこちらで扱っています。

ちなみに、配列変数等の直上にコメントがたらたらと連なっている理由としては、
使用しているエディタとそれに導入している拡張機能によって、ツールヒントの様に
変数直上のコメントを表示させるためです。
************************************************************/




;-------------------------------------------------------------------------------
;                            マクロ定数･文字列登録
;-------------------------------------------------------------------------------

	/*** 各ウィンドウID ***/
	#enum ID_WIN_MASTER = 0
	#enum ID_WIN_OPEN          ; OPウィンドウ
	#enum ID_WIN_MAIN          ; メインウィンドウ
	#enum ID_WIN_AMAZ          ; Amaz
	#enum ID_WIN_DOCK          ; PC Dock
	#enum ID_WIN_SAVE          ; Save & Load
	#enum ID_WIN_SETI          ; Setting
	#enum ID_WIN_INFO          ; 情報ウィンドウ
	/*** bgscr命令のウィンドウID ***/
	#enum ID_TAB_MOTI          ; タブid持ち物
	#enum ID_TAB_SOUKO         ; タブid倉庫
	#enum ID_TAB_LOG           ; タブidログ
	//お店タブ
	#enum ID_OMTAB_CPU    ; CPU
	#enum ID_OMTAB_GPU    ; GPU
	#enum ID_OMTAB_ROM    ; ROM
	#enum ID_OMTAB_SSD    ; SSD
	#enum ID_OMTAB_FAN    ; FAN
	#enum ID_OMTAB_POW    ; Power

	/***  WebView2配列変数用  ***/
	#enum pEnv = 0
	#enum pCtrl
	#enum pView
	#enum ret

	/***  master layerobjのswitch/case  ***/
	#enum lay_autosave = 0
	#enum lay_save
	#enum lay_load
	/***  描画用layerobjのswitch/case  ***/
	#enum gameh = 0
	/***  ステ管理用layerobjのswitch/case  ***/
	#enum newst = 0
	#enum unitc

	// dir_cur + \\text\\changelog.html
	#define changelog dir_cur + "\\text\\changelog.html"
	// dir_cur + \\savedata\\backup.var
	#define backupdir dir_cur + "\\savedata\\backup.var"
	// dir_cur + "\\SQL\\Syouhin.db"
	#define db        dir_cur + "\\SQL\\Syouhin.db"

;-------------------------------------------------------------------------------
;                              ウィンドウ座標
;-------------------------------------------------------------------------------

	; リリースモード
	#const dmode 0

	#const double winw 800    ; ウィンドウサイズ
	#const double winh 500    ; ウィンドウサイズ

	#const eased    300
	#const ease_cnt eased + 1

	#enum eDate = 0
	#enum eTime
	#enum eStat
	#enum eUser
	#enum emodl

	#const dcolor 0xCC3344
	; #const dcolor 0xFFFFFF

	; イージング座標取得用
	; (0, 0) : eDate
	; (0, 1) : eTime
	; (0, 2) : eStat
	; (0, 3) : eUser
	; (0, 4) : emodl
	easepos = 0.0 : ddim easepos, ease_cnt, 5

	; イージング開始フラグ
	; (0, 0) : eDate
	; (0, 1) : eTime
	; (0, 2) : eStat
	; (0, 3) : eUser
	; (0, 4) : emodl
	ease_on = 0 : dim ease_on, 2, 5

	; ウィンドウ座標管理
	; (0, 0) : タイトル文字列 pos x
	; (1, 0) : タイトル文字列 pos y
	; (2, 0) : タイトルボタン pos x
	; (3, 0) : タイトルボタン pos y
	; (4, 0) : 各ウィンドウボタン座標基準点x
	; (5, 0) : 各ウィンドウボタン座標基準点y
	;
	; (0, 1) : 画面右上, ゲーム内日付表示
	; (0, 2) : 画面右上, ゲーム内時間表示
	; (0, 3) : 画面左上, PC各ステータス表示
	; (0, 4) : 画面左上, ユーザーポイント及び所持金表示
	; (0, 5) : 画面中央,   PCモデル表示 (d3module)
	; (0, 6) : 画面中央上, デバッグ用マウス座標
	winxy = 0 : ddim winxy, 7, 10
	winxy(2, 0) = (winw - 200.0) / 2.0
	winxy(3, 0) = (winh - 40.0) / 2.0
	winxy(4, 0) = 680.0
	winxy(5, 0) = 60.0

	; (0, 1) : 画面右上, ゲーム内日付表示
	winxy(0, 1) = 660.0
	winxy(1, 1) = 5.0
	winxy(2, 1) = 790.0
	winxy(3, 1) = 35.0
	winxy(4, 1) = 570.0
	winxy(5, 1) = winxy(0, 1)

	setease winxy(4, 1), winxy(0, 1), ease_quad_inout
	repeat ease_cnt:   easepos(cnt, eDate) = geteasef(cnt, eased)   :loop

	; (0, 2) : 画面右上, ゲーム内時間表示
	winxy(0, 2) = 690.0
	winxy(1, 2) = 40.0
	winxy(2, 2) = 790.0
	winxy(3, 2) = 65.0
	winxy(4, 2) = 0.0
	winxy(5, 2) = 0.0

	; (0, 3) : 画面左上, PC各ステータス表示
	winxy(0, 3) = 5.0
	winxy(1, 3) = 40.0
	winxy(2, 3) = 200.0
	winxy(3, 3) = 240.0
	winxy(4, 3) = winxy(2, 3)
	winxy(5, 3) = 0.0

	setease 90.0, 200.0, ease_quad_inout
	repeat ease_cnt:   easepos(cnt, eStat) = geteasef(cnt, eased)   :loop

	; (0, 4) : 画面中央上, ユーザーポイント及び所持金表示
	winxy(0, 4) = 5.0
	winxy(1, 4) = 5.0
	winxy(2, 4) = 200.0
	winxy(3, 4) = 35.0
	winxy(4, 4) = winxy(2, 4)
	winxy(5, 4) = 0.0

	setease 100.0, 200.0, ease_quad_inout
	repeat ease_cnt:   easepos(cnt, eUser) = geteasef(cnt, eased)   :loop

	; (0, 5) : 画面中央,   PCモデル表示 (d3module)
	winxy(0, 5) = 205.0
	winxy(1, 5) = 40.0
	winxy(2, 5) = 670.0
	winxy(3, 5) = 240.0
	winxy(4, 5) = 0.0
	winxy(5, 5) = 0.0

	; (0, 6) : 画面中央上, デバッグ用マウス座標
	winxy(0, 6) = 250.0
	winxy(1, 6) = 005.0
	winxy(2, 6) = 450.0
	winxy(3, 6) = 035.0
	winxy(4, 6) = 0.0
	winxy(5, 6) = 0.0

;-------------------------------------------------------------------------------
;                                   管理用変数
;-------------------------------------------------------------------------------

	//バージョン
	ver = strf("%.1f", 0.3)
	//titleバー
	titlemes = "PC CareingDiary ver" + ver
	//バージョン情報
	infa = 0 : sdim infa, 128, 5
	notesel infa
	noteload "text\\verinfo.txt" : split infa, "\n", infa
	strrep infa(1), "vv", ver : strrep infa(2), "hh", myhspver(hspver)

	; 設定項目配列
	; (0):オートセーブON/OFF
	; (1):ゲーム速度項目[遅  め]
	; (2):ゲーム速度項目[ふつう]
	; (3):ゲーム速度項目[早  め]
	; (4):ゲーム速度剰余算
	; (5):めいんるーてん制御
	; (6):
	; (7):
	; (8):amzo auto start
	; (9):save auto start
	; (10):sett auto start
	; (11):dock auto start
	; (12):info auto start
	setting = 0 : dim setting, 13, 0
	setting(0) = 0
	setting(1) = 0
	setting(2) = 1
	setting(3) = 0
	setting(4) = 8
	setting(5) = -1
	setting(6) = 0
	setting(7) = 0
	; 実績解除･イベント･課題達成フラグ
	; (0) : 日付変更フラグ
	; (1) : 月変更フラグ
	; (2) : 四半期変更フラグ
	; (3) : 新年あけおめフラグ
	; (4) :
	; (5) :
	; (6) :
	; (7) :
	; (8) :
	; (9) :
	TskFlg = 0 : dim TskFlg, 10
	; 実績解除･イベント･課題達成ログ
	; (0) : 日付変更
	; (1) : 月変更
	; (2) : 四半期変更
	; (3) : 新年あけおめ
	; (4) :
	; (5) :
	; (6) :
	; (7) :
	; (8) :
	; (9) :
	TskLog = "" : sdim TskLog, 64, 10, 2
	TskLog(0, 0) = "" : TskLog(0, 1) = " : Game times %d/%d になりました."
	TskLog(1, 0) = "" : TskLog(1, 1) = " : Game times %d 月--------------"
	TskLog(2, 0) = "" : TskLog(2, 1) = " : Game times %d 四半期---------"
	TskLog(3, 0) = "" : TskLog(3, 1) = " : Happy New Year!!--------------\t\t%d 年目に突入"
	TskLog(4, 0) = "" : TskLog(4, 1) = ""
	TskLog(5, 0) = "" : TskLog(5, 1) = ""
	TskLog(6, 0) = "" : TskLog(6, 1) = ""
	TskLog(7, 0) = "" : TskLog(7, 1) = ""
	TskLog(8, 0) = "" : TskLog(8, 1) = ""
	TskLog(9, 0) = "" : TskLog(9, 1) = ""


	//スタートストップボタン
	opebut_text = "START", "STOP", "あ"
	//オートセーブボタン
	savebut_text = "AutoSave OFF", "AutoSave ON"
	//return amaz
	re_amaz = "Amazoon Return OFF", "Amazoon Return ON"
	//return save load
	re_save = "Data Slot Return OFF", "Data Slot Return ON"
	//return setteing
	re_sett = "Setting Return OFF", "Setting Return ON"
	//return dock
	re_dock = "PC Dock Return OFF", "PC Dock Return ON"
	//return Inform
	re_info = "Inform Return OFF", "Inform Return ON"
	//設定変更時のログ表示
	logstr = "" : sdim logstr, 1024, 10
	logstr(0) = {"
		\n--- Settings Change ---
		Game Speed [ %s ]
		Auto Save    [ %s ]

		--- Auto Start ---
		Amazoon\t [ %s ]
		Data   \t [ %s ]
		Setting\t [ %s ]
		PC Dock\t [ %s ]
		Inform \t [ %s ]"}

	logstr(1) = " : AutoSave Successed! "
	logstr(2) = " : Load Successed! "
	logstr(3) = " : Save Successed! "
	logstr(4) = "Slowest"
	logstr(5) = "Normal"
	logstr(6) = "Fastest"
	logstr(7) = "OFF"
	logstr(8) = "ON"
	logstr(9) = ""

	//セーブカウンター
	savec = 0
	//ゲーム内時間の速度変更
	gtcontrol = 0
	//saveフォルダの有無
	sdim fname
	logmes fname  :  dirlist fname, "savedata", 5  :  logmes fname
	if fname = "" : mkdir "savedata"
	sdim fname
	//ファイル名変数
	fname = "" : sdim fname, 512, 8
	fname(0) = "" + dir_cur + "\\savedata\\Save0.var"
	fname(1) = "" + dir_cur + "\\savedata\\Save1.var"
	fname(2) = "" + dir_cur + "\\savedata\\Save2.var"
	fname(3) = "" + dir_cur + "\\savedata\\Save3.var"
	fname(4) = "" + dir_cur + "\\savedata\\Save4.var"
	fname(5) = "" + dir_cur + "\\savedata\\Save5.var"
	fname(6) = "" + dir_cur + "\\savedata\\AutoSave.var"
	fname(7) = "" + dir_cur + "\\savedata\\Reset.var"
	//saveスロット番号
	saveID = 6


;-------------------------------------------------------------------------------
;                              ステータス系
;-------------------------------------------------------------------------------

	; ポイント
	; (0) : EXP
	; (1) : ねこ
	userp = 0 : ddim userp, 2

	; 単位
	; (0) :  B
	; (1) : KB
	; (2) : MB
	; (3) : GB
	; (4) : TB
	; (5) : PB
	; (6) : EB
	; (7) : ZB
	; (8) : YB
	unit = "B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"
	unit2 = "B", "K", "M", "G", "T", "P", "E", "Z", "Y"
	ease_on = 0
	; 単位変換カウンタ
	; (0) : rom
	; (1) : ssd
	unit_cnt = 0 : dim unit_cnt, 2

	; ステータス管理フォーマット
	stformat(0) = {"
		Core i %d
		%d
		%.1f %s
		%.1f %s
		%.1f rpm
		%.1f deg
		%.1f %%"}

	stformat(1) = {"
		C %d
		G %d
		R %d %s
		S %d %s
		F %d
		T %d
		P %d %%"}

	; ステータス管理
	; (0) : CPU
	; (1) : GPU
	; (2) : ROM
	; (3) : SSD
	; (4) : FAN
	; (5) : THERMAL
	; (6) : POWER
	; (7) : POWER計算途中
	; (7) : POWER max値
	st = 0 : ddim st, 9
	st(0) = 1.0
	st(1) = 1.0
	st(2) = 1.0
	st(3) = 1.0
	st(4) = 120.0
	st(5) = 40.0
	st(6) = 100.0
	st(7) = 0.0
	st(8) = 100.0

	; 各種ステータス変動値
	; (0) : CPU
	; (1) : GPU
	; (2) : ROM
	; (3) : SSD
	; (4) : FAN
	; (5) : THERMAL
	; (6) : Power
	; (7) : powerプログレスバー
	dsta = 0.0 : ddim dsta, 7
	dsta(0) = 0.0
	dsta(1) = 0.0
	dsta(2) = 0.4
	dsta(3) = 1.0
	dsta(4) = 0.0
	dsta(5) = 0.0
	dsta(6) = 0.01

	; パーツの各種性能値
	; (0) : CPU
	; (1) : GPU
	; (2) : ROM
	; (3) : SSD
	; (4) : FAN
	; (5) : THERMAL
	; (6) : Power
	pst = 0.0 : ddim pst, 7
	pst(0) = 0.02
	pst(1) = 0.02
	pst(2) = 0.02
	pst(3) = 0.02
	pst(4) = 0.02
	pst(5) = 0.02
	pst(6) = 0.02

	; 熱･温度関係
	thermal = 0.0 : ddim thermal, 10

	; 日付管理
	; (0) : 年
	; (1) : 四半期
	; (2) : 月
	; (3) : 日
	; (4) : 時間
	; (5) : 分
	; (6)
	gt = 0 : dim gt, 7
	gt(0) = 0
	gt(1) = 3
	gt(2) = 12
	gt(3) = 10
	gt(4) = 22
	gt(5) = 0
	gt(6) = 0

	; 日付管理用フォーマット
	gtformat(0) = "%2d年目 第%d四半期 %d月%d日"
	gtformat(1) = "%2d年 %d期 %d/%d"
	gtformat(2) = "%02d:%02d"


	sdim motimono, 2048 : sdim soukomoni, 2048 : sdim logmoni, 2048 : sdim omisemoni, 2048
	//持ち物表示用その他1
	motimono += "持ち物一覧です\n\n"
	//倉庫
	soukomoni = ""
	//お店
	omisemoni = ""
	//ログ表示用
	logmoni = "\n\n"


//------------------------------------------------------------------------------
//                      オブジェクトID, ハンドル格納用
//------------------------------------------------------------------------------

	; フォントハンドル:MyricaMM
	; (0) : MyricaMM, 16
	; (1) : MyricaMM, 14
	; (2) : MyricaMM, 13
	; (3) : 20
	; (4) : 17
	; (5) : 15
	; (6) :
	; (7) :
	; (8) :
	; (9) :
	hFont = 0 : dim hFont, 10
	hFont(3) = 20
	hFont(4) = 16
	hFont(5) = 13
	hFont(6) = 0
	hFont(7) = 0
	hFont(8) = 0
	hFont(9) = 0

	//設定変更時のゲーム速度
	string2 = ""
	; 設定画面チェックボックスオブジェクトIDとハンドル
	; 第2次元要素 0 = ID, 1 = objct hWnd
	; (0, 0) : ゲーム速度項目[遅  め]
	; (1, 0) : ゲーム速度項目[ふつう]
	; (2, 0) : ゲーム速度項目[早  め]
	; (3, 0) : amzo auto start
	; (4, 0) : save auto start
	; (5, 0) : sett auto start
	; (6, 0) : dock auto start
	; (7, 0) : info auto start
	Shkidh = 0  :  dim Shkidh, 8, 2

	; レイヤーオブジェクトID
	; 第2次元要素 0 = ID, 1 = objct hWnd
	; (0) : MASTER / セーブ・ロード用
	; (1) : MAIN   / 時間・ログ表示用
	; (2) : MAIN   / ステータス管理用
	layidh = 0 : dim layidh, 3

	//レイヤーオブジェクトlparam受け取り
	layl = 0 : dim layl, 3

	; save & load オブジェクトハンドル
	; (0, 0) : hLoad0
	; (1, 0) : hSave0
	; (0, 1) : hLoad1
	; (1, 1) : hSave1
	; (0, 2) : hLoad2
	; (1, 2) : hSave2
	; (0, 3) : hLoad3
	; (1, 3) : hSave3
	; (0, 4) : hLoad4
	; (1, 4) : hSave4
	; (0, 5) : hLoad5
	; (1, 5) : hSave5
	hls = 0 : dim hls, 2, 6

	//プログレスバーオブジェクトハンドル
	hPb = 0 : dim hPb, 1

	//WebView2用
	dim webv2, 4

//------------------------------------------------------------------------------
//                                  各部色設定
//------------------------------------------------------------------------------

	; RGB形式色情報設定
	; (0) (0x1A1ABF) : データスロット枠線部
	; (1) (0xE6E6E6) : データスロット中央背景
	; (2) (0x000000) : データスロット文字色
	; (3) (0x66B3D9) : オープニング背景
	; (4) (0xE170A9) : オープニングタイトル文字色
	color_data = 0 : dim color_data, 5
	color_data(0) = 0x1A1ABF
	color_data(1) = 0xE6E6E6
	color_data(2) = 0x000000
	color_data(3) = 0x66B3D9
	color_data(4) = 0xE170A9


//------------------------------------------------------------------------------
//                                    S Q L
//------------------------------------------------------------------------------

	//商品リストビューのオブジェクトハンドル
	//第2次元要素 0 = objct hWnd
	//LVidh(0, 0):CPU
	//LVidh(1, 0):GPU
	//LVidh(2, 0):ROM
	//LVidh(3, 0):SSD
	//LVidh(4, 0):FAN
	//LVidh(5, 0):POWER
	LVidh = "" : dim LVidh, 6, 1

	//商品データ
	sdim cpu, 2048 : sdim gpu, 2048 : sdim rom, 2048 : sdim ssd, 2048 : sdim fan, 2048 : sdim pow, 2048
	//リセット用バッファー
	sdim bfcpu, 2048 : sdim bfgpu, 2048 : sdim bfrom, 2048 : sdim bfssd, 2048 : sdim bffan, 2048 : sdim bfpow, 2048
	//カラムリスト
	col_list = 0 : sdim col_list, 64
	//カラムの幅
	column_w = 60, 60, 110, 85, 80, 80
	//昇降順切り替え
	swlv = 0 : dim swlv, 6
	swlv(0) = 1, 1, 1, 1, 1, 1
	; 昇降順クエリ
	sqsc = " DESC;", " ASC;"
	; 昇降順カラム用クエリ
	colum_sqsc = "" : sdim colum_sqsc, 64, 6
	colum_sqsc(0) = "SELECT * FROM MyCPU ORDER BY "
	colum_sqsc(1) = "SELECT * FROM MyGPU ORDER BY "
	colum_sqsc(2) = "SELECT * FROM MyROM ORDER BY "
	colum_sqsc(3) = "SELECT * FROM MySSD ORDER BY "
	colum_sqsc(4) = "SELECT * FROM MyFAN ORDER BY "
	colum_sqsc(5) = "SELECT * FROM MyPOW ORDER BY "

	/***SQL***/
	sql_open db
	sql_q "BEGIN;"

	/***CPU***/
	sql_q "SELECT * FROM MyCPU;", bfcpu
	//カラムリスト
	col_list = sql_collist(",", bfcpu) : split col_list, ",", col_list

	sql_q "SELECT * FROM MyGPU;", bfgpu ; GPU
	sql_q "SELECT * FROM MyROM;", bfrom ; ROM
	sql_q "SELECT * FROM MySSD;", bfssd ; SSD
	sql_q "SELECT * FROM MyFAN;", bffan ; FAN
	sql_q "SELECT * FROM MyPOW;", bfpow ; POW
	sql_q "COMMIT;"
	sql_close